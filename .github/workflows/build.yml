name: Build Docker container for business_card_flask_app

on:
  push:
    branches:
      - BC-6

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # clone my code from repo
      - name: Checkout code
        uses: actions/checkout@v2

      # set ups for login
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


        # building images for tests, and pushing them
      - name: Build and push flask_app image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: diiego300years/business_card_app:latest

      - name: Build and push db_test image
        uses: docker/build-push-action@v4
        with:
          context: ./db_test
          push: true
          tags: diiego300years/db_test_business_card:latest

      - name: Create .env file
        run: |
          echo "FLASK_APP=${{ secrets.FLASK_APP }}" >> .env
          echo "SQLALCHEMY_DATABASE_URI=${{ secrets.TEST_DB_URI }}" >> .env
          echo "FLASK_DEBUG=${{ secrets.FLASK_DEBUG }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
          echo "FLASKY_MAIL_SENDER=${{ secrets.FLASKY_MAIL_SENDER }}" >> .env
          echo "MAIL_USE_TLS=${{ secrets.MAIL_USE_TLS }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "FLASKY_ADMIN=${{ secrets.FLASKY_ADMIN }}" >> .env
          echo "FLASK_CONFIG=${{ secrets.FLASK_CONFIG }}" >> .env
          echo "FLASK_APP_NAME=${{ secrets.FLASK_APP_NAME }}" >> .env

      - name: Create .env.test file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.test
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.test
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env.test
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env.test
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.test
          

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: check containers
        run: docker ps -a

      - name: Start services with Docker Compose and .env
        run: docker-compose build

      - name: Verify container is running
        run: docker ps

      - name: Run tests
        run: docker exec flask_app flask test

      - name: Tear down services
        run: docker-compose down


